swagger: '2.0'
info:
  version: '1.0'
  title: 'Coffee Counter API'
  description: ''
tags:
- name: coffee
  description: Everything about your coffees
  externalDocs:
    description: Find out more
    url: https://github.com/ASE2019-red/thingy-api-red
- name: machine
  description: Access to coffeemachine orders


paths: 
  /coffee:
    post:
      tags:
      - coffee
      summary: Add a new coffee to the machine
      operationId: addCoffee
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Coffee object that needs to be added to the machine
        required: true
        schema:
          $ref: '#/definitions/Coffee'
      responses:
        405:
          description: Invalid input
      security:
      - coffeemachine_auth:
        - write:coffees
        - read:coffees
    put:
      tags:
      - coffee
      summary: Update an existing coffee
      operationId: updateCoffee
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Coffee object that needs to be added to the machine
        required: true
        schema:
          $ref: '#/definitions/Coffee'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Coffee not found
        405:
          description: Validation exception
      security:
      - coffeemachine_auth:
        - write:coffees
        - read:coffees
    get:
      tags:
      - coffee
      summary: Get all coffees
      operationId: allCoffees
      produces:
      - application/json
      description: Return a list of all coffees
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Coffee'
              
  /coffee/{coffeeId}:
    get:
      tags:
      - coffee
      summary: Find coffee by ID
      description: Returns a single coffee
      operationId: getCoffeeById
      produces:
      - application/json
      - application/xml
      parameters:
      - name: coffeeId
        in: path
        description: ID of coffee to return
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Coffee'
        400:
          description: Invalid ID supplied
        404:
          description: Coffee not found
      security:
      - api_key: []
    delete:
      tags:
      - coffee
      summary: Deletes a coffee
      operationId: deleteCoffee
      produces:
      - application/json
      - application/xml
      parameters:
      - name: api_key
        in: header
        required: false
        type: string
      - name: coffeeId
        in: path
        description: Coffee id to delete
        required: true
        type: integer
        format: int64
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Coffee not found
      security:
      - coffeemachine_auth:
        - write:coffees
        - read:coffees

        
  /machine:
    post:
      tags:
      - machine
      summary: Add a new machine
      operationId: addMachine
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Machine object that needs to be added as a possible beverage maker
        required: true
        schema:
          $ref: '#/definitions/Machine'
      responses:
        405:
          description: Invalid input
      security:
      - coffeemachine_auth:
        - write:machines
        - read:machines
    put:
      tags:
      - machine
      summary: Update an existing machine
      operationId: updateMachine
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Machine object that needs to be updated
        required: true
        schema:
          $ref: '#/definitions/Machine'
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Machine not found
        405:
          description: Validation exception
      security:
      - coffeemachine_auth:
        - write:machines
        - read:machines
    get:
      tags:
      - machine
      summary: Get all machines
      operationId: allMachines
      produces:
      - application/json
      description: Return a list of all machines
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Machine'


  /machine/{machineId}/coffee:
    get:
      tags:
      - machine
      summary: Returns total amount of coffees by a specific machine
      description: Returns a map of status codes to quantities
      operationId: getCoffeesOfMachine
      produces:
      - application/json
      parameters:
      - name: machineId
        in: path
        description: ID of machine that needs to be fetched
        required: true
        type: integer
        maximum: 10.0
        minimum: 1.0
        format: int64
      responses:
        200:
          description: successful operation
          schema:
            type: object
            additionalProperties:
              type: integer
              format: int32
      security:
      - api_key: []


securityDefinitions:
  coffeemachine_auth:
    type: oauth2
    authorizationUrl: http://coffeemachine.swagger.io/oauth/dialog
    flow: implicit
    scopes:
      write:coffees: modify coffees in your account
      read:coffees: read your coffees
      write:machines: modify machines in your account
      read:machines: read your machines
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Coffee:
    type: object
    required:
    - machine
    properties:
      id:
        type: integer
        format: int64
      machine:
        $ref: '#/definitions/Machine'
      status:
        type: string
        description: coffee status, in case something goes wrong
        enum:
        - canceled
        - produced
        - consumed
        default: consumed
  Machine:
    type: object
    required:
    - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: coffee machine
        description: Name of tha machine, in order for the user to be able to identify it.
      active:
        type: boolean
        default: true
        description: If the thingy is moved to another machine, this one has to be deactivated.

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /gcorsini/thingy-api-red/1.0
schemes:
 - https
